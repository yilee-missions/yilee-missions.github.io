[{"categories":["學習"],"contents":"因Hugo屬於靜態網頁，若需使用評論功能，需透過Disqus支援。\nstep0: 檢查套用主題是否支援支援Disqus功能，到confiq.toml檔案檢查是否下列程式碼。 若原模板沒有支援Disqus step1: 到Hugo網站搜尋Disqus，找到下圖程式碼，複製下來。 step2: 回到VS Code，找到theme/layout/_default資料夾的single檔案，將上述程式碼貼在comment之後，示範如下圖。（template 放該程式碼的檔案，會位在layout資料夾，但檔案名稱不一定是single)，並添加step0的程式碼到confiq.toml檔案 確認網站可支援Disqus後，申請Disqus帳號 step1: 將申請Disqus的shortname貼進confiq.toml內，程式碼disqusShortname後雙引號之內 step2: 若在本地預覽出現以下文字表示設定成功，當網站上傳至Github後即可使用評論功能。 ","permalink":"https://yilee-missions.github.io/blog/learn_05_addcomments_inhugo/","tags":["Hugo","Notes"],"title":"在Hugo網頁添加評論功能"},{"categories":["學習"],"contents":"發布網站到Github的步驟 step1: 到Github網站創建一個新的New repository step2: 為 repository命名 step3: 創建 repository step4: Set up in Desktop，將repository clone到電腦上 step5: 開啟Github Desktop step6: 複製資料夾到Desktop step7: 用Hugo產生個人網站的程式碼，透過命令提示字元，輸入Hugo按下Enter鍵，產生了一個新的資料夾 Public step8: 複製Step7 Public產生的全部資料到Step6產生的資料夾中 step9: 回到GitHub Desktop 為更新命名，產生新的Commit step10: 在GitHub Desktop 右上角點擊Publish Branch。回到Github網站即可發現更新 step11: 即可到自己帳號的網站查看更新 更新網站內容 更新網站內容之後，重複上述步驟 Step7~Step11，在step取代所有資料夾，在Step9將commit的命名成新的名字即可。\n","permalink":"https://yilee-missions.github.io/blog/learn_04_publishwebsite/","tags":["Hugo","Github","Notes"],"title":"在Github上發布網站與更新"},{"categories":["學習"],"contents":"這篇筆記學習透過Shortcodes 插入社群媒體文章與影音到Hugo的網頁中。\n寫法可參考 hugo網站對shortcodes的說明 shortcodes說明\n插入Youtube 影片語法 例如一部Youtube影片網址影片網址\nhttps://www.youtube.com/watch?v=9avn3F6qo5UV\n在v=之後的數值9avn3F6qo5UV是該影片id 將該id放在以下語法之後 以以下語法插入Youtube影片\n{\u0026lt; youtube 9avn3F6qo5U\u0026gt;}}\n效果如下\n  插入Vimeo影片語法 類似Youtube 找到網址後的id代碼 如以下網址的id為65107797\nhttps://vimeo.com/channels/staffpicks/65107797\n以以下語法插入Youtube影片\n{\u0026lt; vimeo 65107797\u0026gt;}}\n效果如下\n ","permalink":"https://yilee-missions.github.io/blog/learn_03_shortcodes_inhugo/","tags":["Hugo","Shortcodes","Notes"],"title":"使用Hugo Shortcodes"},{"categories":["學習"],"contents":"每篇文章的最開頭，需寫入以下程式碼，方能順利顯示在Hugo的網頁上\ntitle: \u0026#34;這裡寫文章標題\u0026#34; date: 2019-10-29T10:07:47+06:00 draft: false # post thumb 文章的縮圖 image: \u0026#34;images/post/post-3.jpg\u0026#34; # meta description description: \u0026#34;this is meta description\u0026#34; # taxonomies categories: - \u0026#34;Go Language\u0026#34; tags: - \u0026#34;Photos\u0026#34; # post type type: \u0026#34;post\u0026#34; 預設屬性分別為：  title：標題名 date：日期 draft：草稿，如果是 true 生成網站時，不包括此頁面  常用 Front Matter 屬性 其他 Hugo 支持的常用 Front Matter 屬性\n description：內容描述，主要用於 SEO 優化 tags：標籤 categories：分類 keywords：關鍵字 url：文章 url 名稱，預設使用檔案名稱 weight：列表頁的文章排序，越小越靠前，無設定則依照時間排序 ","permalink":"https://yilee-missions.github.io/blog/learn_02_postwithtags_inhugo/","tags":["Hugo","標籤","Notes"],"title":"Hugo文章分類，為文章加上標籤"},{"categories":["學習"],"contents":"Markedown語法包含以下格式 Markdown語法無法改變顏色，但可以做以下變化\n1. 內文: 直接打內容\n2. 標題: 前面加上一個#變成一級標題 兩個#變成二級標題\n以此類推 支援到六級標題 示範如下\n一級標題 二級標題 三級標題 四級標題 五級標題 六級標題 3. 粗體: 在需要加粗的文字前後加上兩個**，格式會變成**加粗文字**\n**加粗文字範例**與無加粗文字比較\r 4. 斜體: 在需要變成斜體的文字前後加上一個*，格式會變成*斜體文字*，粗體斜體無法同時使用\n *斜體文字範例*與無斜體文字比較\r 5. 有序序列: 在想要變成序列的文字前方打上1.和一空白鍵，第二點前方可以打上2.和一空白鍵或1.和一空白鍵，語法會直接變成有序序列，範例如下\n 這是第一點 這是第二點  6. 無序序列: 在想要變成序列的文字前方打上*和一空白鍵，第二點前方可以打上2.和一空白鍵或1.和一空白鍵，會變成無序序列，範例如下\n 第一個無序序列 第二個無序序列   有序序列與無序序列若想要加層級 每一個層級換行後額外加上四個空白鍵即可產生縮排效果 示範如下\n   這是第一個層級第一項\n  這是第二個層級第一項\n  這是第二個層級第二項\n 這是第三個層級第一項 這是第三個層級第二項      這是第二個層級第一項\n  7. 引用: 在引用的文字前方打上\u0026gt;和一空白鍵，會顯示成引用文字，範例如下\n 以下是一段引用文字\n 8. 超連結: 使用方式是在一對中括號[]裡面打上想要呈現的文字，緊跟著一對小括號()裡面打上超連結的位置，範例如下\n我是超連結\n若是超連結是連到網站內頁，語法格式與上述相同，惟須注意小括號裡面的格式是/加上資料夾名稱加上/加上檔案名稱，不含副檔名， 範例如下\n我是連回blog其他文章的超連結\n9. 圖片: 使用方式是先打一個驚嘆號!，緊跟著一對中括號[]和一對小括號()裡面打上圖片的位置，範例如下\n是圖片是連到網站內圖片，語法格式與上述相同，惟須注意小括號裡面的格式是/加上資料夾名稱加上/加上檔案名稱，包含副檔名， 範例如下\n10. 單行程式碼: 是可用於內文的程式碼。在一段內文後`，打一對小引號 ，在小引號內打入程式碼，範例如下\n這是一段內文，之後緊跟著一行程式碼Hello World\n11. 多行程式碼: 多行程式碼無法寫在內文裡，而必須換行書寫。在程式碼前後行各輸入三個小引號，在開頭的小飲號後方可寫語法名稱，多行程式碼即可按該語法的顯示方式顯現，以下是一段python範例\nprint(\u0026#34;Hello world\u0026#34;) print(\u0026#34;Hello world\u0026#34;) print(\u0026#34;Hello world\u0026#34;) 12. 表格: 不好使用，依據|分欄位，換行分列，使用分隔線與冒號，可排版對齊方式，示範如下\n   第一列 第二列置中 第三列靠左     col 3 is right-aligned $1600   col 2 is centered $12   zebra stripes are neat $1    推薦編寫Markdown的編輯器Typora  好處: 所見即所得\n缺點: 圖片與Hugo沒有整合的很好\n解決方式: 在Typora寫好文字，預留圖片空間，再回到visual studio code編輯\n Typora載點\n","permalink":"https://yilee-missions.github.io/blog/learn_01_md_basic/","tags":["Markdown","Notes"],"title":"Markdown 語法學習"}]